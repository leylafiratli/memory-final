{"version":3,"sources":["assets/images/memory.jpeg","global.js","components/memories.js","components/save-memory.js","components/edit-memory.js","components/memory.js","components/navbar.js","components/login.js","components/signup.js","components/quote.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","server","Memories","state","memories","localStorage","getItem","this","props","history","push","getMemories","_this2","axios","get","headers","Authorization","then","data","console","log","setState","catch","error","memory_id","_this3","delete","_this4","memoriesList","length","map","memory","react_default","a","createElement","key","id","className","src","Plane","react_router_dom","to","title","description","substring","onClick","deleteMemory","Component","SaveMemory","image","vtitle","vtitletext","vdescription","vdescriptiontext","handleChange","e","_this","Object","defineProperty","target","value","handleSubmit","preventDefault","model","post","response","onSubmit","type","onChange","htmlFor","EditMemory","match","params","put","Memory","handleClick","deletePost","Navbar","logout","clear","withRouter","Login","username","password","token","vusername","vusernametext","vpassword","vpasswordtext","vauthenticate","vauthenticatetext","setItem","non_field_errors","Signup","first_name","last_name","email","gender","vfname","vfnametext","vlname","vlnametext","vemail","vemailtext","name","Quote","quote","verifyToken","getQuote","Accept","contents","quotes","author","App","navbar","react_router","exact","path","component","Boolean","window","location","hostname","interceptors","use","detail","reload","Promise","reject","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,0PCC3BC,EAAS,0DCwGPC,6MAhGXC,MAAQ,CACJC,SAAU,uFAI0B,MAAjCC,aAAaC,QAAQ,UACpBC,KAAKC,MAAMC,QAAQC,KAAK,UAE5BH,KAAKI,oDAGM,IAAAC,EAAAL,KACXM,IAAMC,IAAIb,EAAS,qBAAsB,CAAEc,QAAS,CAAEC,cAAiB,OAASX,aAAaC,QAAQ,YAChGW,KAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZN,EAAKS,SAAS,CACVjB,SAAUc,EAAKA,SAGtBI,MAAM,SAAAC,GACHJ,QAAQC,IAAIG,0CAKXC,GAAW,IAAAC,EAAAlB,KAEpBM,IAAMa,OAAOzB,EAAS,oBAAsBuB,EAAW,CAAET,QAAS,CAAEC,cAAiB,OAASX,aAAaC,QAAQ,YAC9GW,KAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZO,EAAKd,gBAERW,MAAM,SAAAC,GACHJ,QAAQC,IAAIG,sCAKf,IAAAI,EAAApB,KACGH,EAAaG,KAAKJ,MAAlBC,SAEFwB,EAAexB,EAASyB,OAC1BzB,EAAS0B,IAAI,SAAAC,GACT,OACIC,EAAAC,EAAAC,cAAA,OAAKC,IAAMJ,EAAOK,GAAKC,UAAU,mBAC7BL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,eAAeC,IAAMC,OAExCP,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACXL,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAK,WAAaV,EAAOK,IAC3BJ,EAAAC,EAAAC,cAAA,QAAMG,UAAU,cAAeN,EAAOW,QAGtCX,EAAOY,YAAYd,OAAS,IACxBG,EAAAC,EAAAC,cAAA,SAAKH,EAAOY,YAAYC,UAAU,EAAE,IAAM,OAE1CZ,EAAAC,EAAAC,cAAA,SAAKH,EAAOY,cAIxBX,EAAAC,EAAAC,cAAA,OAAKG,UAAU,eACXL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,uCAAuCQ,QAAS,WAAOlB,EAAKmB,aAAaf,EAAOK,KAAMM,MAAM,iBAAzG,UACAV,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAK,gBAAkBV,EAAOK,IAChCJ,EAAAC,EAAAC,cAAA,KAAGG,UAAU,uBAAuBK,MAAM,eAA1C,cAQxBV,EAAAC,EAAAC,cAAA,KAAGG,UAAU,WAEjB,OACIL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBACXL,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAK,iBACPT,EAAAC,EAAAC,cAAA,KAAGE,GAAG,aAAaC,UAAU,oCAAoCK,MAAM,kBACnEV,EAAAC,EAAAC,cAAA,KAAGG,UAAU,kBAAb,WAKhBL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBACXL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,uBAAd,iBAGNT,UA3FKmB,qBC+FRC,6MAjGX7C,MAAQ,CACJuC,MAAO,GACPC,YAAa,GACbM,MAAO,GACPC,QAAQ,EACRC,WAAY,GACZC,cAAc,EACdC,iBAAkB,MAStBC,aAAe,SAACC,GACZC,EAAKnC,SAALoC,OAAAC,EAAA,EAAAD,CAAA,GACKF,EAAEI,OAAOvB,GAAKmB,EAAEI,OAAOC,WAIhCC,aAAe,SAACN,GACZA,EAAEO,iBACF,IAAIC,EAAQ,CACRrB,MAAOc,EAAKrD,MAAMuC,MAClBC,YAAaa,EAAKrD,MAAMwC,YACxBM,MAAOO,EAAKrD,MAAM8C,OAEtBO,EAAKnC,SAAS,CACV6B,QAAQ,EACRC,WAAY,GACZC,cAAc,EACdC,iBAAkB,KAEtBxC,IAAMmD,KAAK/D,EAAS,qBAAsB8D,EAAO,CAAEhD,QAAS,CAAEC,cAAiB,OAASX,aAAaC,QAAQ,YACxGW,KAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZsC,EAAKhD,MAAMC,QAAQC,KAAK,eAE3BY,MAAM,SAAAC,GACH,IACQA,EAAM0C,SAAS/C,KAAKwB,OACpBc,EAAKnC,SAAS,CACV6B,QAAQ,EACRC,WAAY5B,EAAM0C,SAAS/C,KAAKwB,MAAM,KAG1CnB,EAAM0C,SAAS/C,KAAKyB,aACpBa,EAAKnC,SAAS,CACV+B,cAAc,EACdC,iBAAkB9B,EAAM0C,SAAS/C,KAAKyB,YAAY,KAI9D,MAAMpB,GACFJ,QAAQC,IAAIG,EAAM0C,iGA7CM,MAAjC5D,aAAaC,QAAQ,UACpBC,KAAKC,MAAMC,QAAQC,KAAK,2CAmD5B,OACIsB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACXL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,QAAMgC,SAAU3D,KAAKsD,cACjB7B,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,uBACXL,EAAAC,EAAAC,cAAA,SAAOE,GAAG,QAAQ+B,KAAK,OAAOC,SAAU7D,KAAK+C,eAC7CtB,EAAAC,EAAAC,cAAA,SAAOmC,QAAQ,SAAf,iBACArC,EAAAC,EAAAC,cAAA,QAAMG,UAAU,uBAAuBD,GAAG,UACpC7B,KAAKJ,MAAM+C,OAAS3C,KAAKJ,MAAMgD,WAAa,KAGtDnB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,uBACXL,EAAAC,EAAAC,cAAA,YAAUE,GAAG,cAAcC,UAAU,uBAAuB+B,SAAU7D,KAAK+C,eAC3EtB,EAAAC,EAAAC,cAAA,SAAOmC,QAAQ,eAAf,uBACArC,EAAAC,EAAAC,cAAA,QAAMG,UAAU,uBAAuBD,GAAG,gBACpC7B,KAAKJ,MAAMiD,aAAe7C,KAAKJ,MAAMkD,iBAAmB,KAGlErB,EAAAC,EAAAC,cAAA,SAAOiC,KAAK,UAEhBnC,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,uBACXL,EAAAC,EAAAC,cAAA,UAAQG,UAAU,6DAA6D8B,KAAK,UAApF,qBAzFHpB,aCoHVuB,6MAnHXnE,MAAQ,CACJuC,MAAO,GACPC,YAAa,GACbM,MAAO,GACPC,QAAQ,EACRC,WAAY,GACZC,cAAc,EACdC,iBAAkB,MAsBtBC,aAAe,SAACC,GACZC,EAAKnC,SAALoC,OAAAC,EAAA,EAAAD,CAAA,GACKF,EAAEI,OAAOvB,GAAKmB,EAAEI,OAAOC,WAIhCC,aAAe,SAACN,GACZA,EAAEO,iBACF,IAAIC,EAAQ,CACRrB,MAAOc,EAAKrD,MAAMuC,MAClBC,YAAaa,EAAKrD,MAAMwC,YACxBM,MAAOO,EAAKrD,MAAM8C,OAEtBO,EAAKnC,SAAS,CACV6B,QAAQ,EACRC,WAAY,GACZC,cAAc,EACdC,iBAAkB,KAEtB,IAAI7B,EAAYgC,EAAKhD,MAAM+D,MAAMC,OAAOpC,GACxCvB,IAAM4D,IAAIxE,EAAS,oBAAsBuB,EAAWuC,EAAO,CAAEhD,QAAS,CAAEC,cAAiB,OAASX,aAAaC,QAAQ,YAClHW,KAAK,SAAAC,GACFsC,EAAKnC,SAAS,CACVqB,MAAOxB,EAAKA,KAAKwB,MACjBC,YAAazB,EAAKA,KAAKyB,YACvBM,MAAO/B,EAAKA,KAAK+B,QAErBO,EAAKhD,MAAMC,QAAQC,KAAK,eAE3BY,MAAM,SAAAC,GACH,IACQA,EAAM0C,SAAS/C,KAAKwB,OACpBc,EAAKnC,SAAS,CACV6B,QAAQ,EACRC,WAAY5B,EAAM0C,SAAS/C,KAAKwB,MAAM,KAG1CnB,EAAM0C,SAAS/C,KAAKyB,aACpBa,EAAKnC,SAAS,CACV+B,cAAc,EACdC,iBAAkB9B,EAAM0C,SAAS/C,KAAKyB,YAAY,KAI9D,MAAMpB,GACFJ,QAAQC,IAAIG,EAAM0C,iGAhEd,IAAArD,EAAAL,KACoB,MAAjCF,aAAaC,QAAQ,UACpBC,KAAKC,MAAMC,QAAQC,KAAK,UAE5B,IAAIc,EAAYjB,KAAKC,MAAM+D,MAAMC,OAAOpC,GACxCvB,IAAMC,IAAIb,EAAS,oBAAsBuB,EAAW,CAAET,QAAS,CAAEC,cAAiB,OAASX,aAAaC,QAAQ,YAC3GW,KAAK,SAAAC,GACFN,EAAKS,SAAS,CACVqB,MAAOxB,EAAKA,KAAKwB,MACjBC,YAAazB,EAAKA,KAAKyB,YACvBM,MAAO/B,EAAKA,KAAK+B,UAGxB3B,MAAM,SAAAC,GACHJ,QAAQC,IAAIG,sCAyDpB,OACIS,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACXL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,QAAMgC,SAAU3D,KAAKsD,cACjB7B,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,uBACXL,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,SAAOE,GAAG,QAAQ+B,KAAK,OAAOC,SAAU7D,KAAK+C,aAAcM,MAAOrD,KAAKJ,MAAMuC,QAC7EV,EAAAC,EAAAC,cAAA,QAAMG,UAAU,uBAAuBD,GAAG,UACpC7B,KAAKJ,MAAM+C,OAAS3C,KAAKJ,MAAMgD,WAAa,KAGtDnB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,uBACXL,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,YAAUE,GAAG,cAAcC,UAAU,uBAAuB+B,SAAU7D,KAAK+C,aAAcM,MAAOrD,KAAKJ,MAAMwC,cAC3GX,EAAAC,EAAAC,cAAA,QAAMG,UAAU,uBAAuBD,GAAG,gBACpC7B,KAAKJ,MAAMiD,aAAe7C,KAAKJ,MAAMkD,iBAAmB,KAGlErB,EAAAC,EAAAC,cAAA,SAAOiC,KAAK,UAEhBnC,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,uBACXL,EAAAC,EAAAC,cAAA,UAAQG,UAAU,6DAA6D8B,KAAK,UAApF,qBA3GHpB,aCoFV2B,6MAjFXvE,MAAQ,CACJ4B,OAAQ,MAqBZ4C,YAAc,SAACpB,GACXC,EAAKhD,MAAMoE,WAAWpB,EAAKhD,MAAMwD,KAAK5B,IACtCoB,EAAKhD,MAAMC,QAAQC,KAAK,yFApBR,IAAAE,EAAAL,KACoB,MAAjCF,aAAaC,QAAQ,UACpBC,KAAKC,MAAMC,QAAQC,KAAK,UAE5B,IAAIc,EAAYjB,KAAKC,MAAM+D,MAAMC,OAAOpC,GACxCvB,IAAMC,IAAIb,EAAS,oBAAsBuB,EAAW,CAAET,QAAS,CAAEC,cAAiB,OAASX,aAAaC,QAAQ,YAC3GW,KAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZN,EAAKS,SAAS,CACVU,OAAQb,EAAKA,SAGpBI,MAAM,SAAAC,GACHJ,QAAQC,IAAIG,0CAUXC,GAAW,IAAAC,EAAAlB,KACpBM,IAAMa,OAAOzB,EAAS,oBAAsBuB,EAAW,CAAET,QAAS,CAAEC,cAAiB,OAASX,aAAaC,QAAQ,YAC9GW,KAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZO,EAAKjB,MAAMC,QAAQC,KAAK,eAE3BY,MAAM,SAAAC,GACHJ,QAAQC,IAAIG,sCAKf,IAAAI,EAAApB,KACCwB,EAASxB,KAAKJ,MAAM4B,OACtBC,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,sBAAsBC,IAAMC,MACvCP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAK,iBACPT,EAAAC,EAAAC,cAAA,KAAGG,UAAU,yDAAyDK,MAAM,kBACxEV,EAAAC,EAAAC,cAAA,KAAGG,UAAU,kBAAb,UAIhBL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACXL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,cAAe9B,KAAKJ,MAAM4B,OAAOW,OACjDV,EAAAC,EAAAC,cAAA,SAAK3B,KAAKJ,MAAM4B,OAAOY,cAE3BX,EAAAC,EAAAC,cAAA,OAAKG,UAAU,eACXL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,uCAAuCQ,QAAS,WAAOlB,EAAKmB,aAAanB,EAAKxB,MAAM4B,OAAOK,KAAMM,MAAM,iBAApH,UACAV,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAK,gBAAkBlC,KAAKJ,MAAM4B,OAAOK,IAC3CJ,EAAAC,EAAAC,cAAA,KAAGG,UAAU,uBAAuBK,MAAM,eAA1C,aAOpBV,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBAEnB,OACIL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WACXL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,uBAAd,eAGNN,UA5EGgB,aCAf8B,6MAEFC,OAAS,WACLzE,aAAa0E,QACbvB,EAAKhD,MAAMC,QAAQC,KAAK,mFAIxB,OACIsB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,sBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACXL,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,IAAIJ,UAAU,yBAAvB,kBAEqC,MAAjChC,aAAaC,QAAQ,SACrB0B,EAAAC,EAAAC,cAAA,MAAIE,GAAG,aAAaC,UAAU,gCAC1BL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,aAAT,gBACJT,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,UAAT,UACJT,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAASC,GAAG,UACRT,EAAAC,EAAAC,cAAA,KAAGG,UAAU,iBAAiBQ,QAAStC,KAAKuE,QAA5C,yBAIR,cAvBP/B,aAgCNiC,cAAWH,GCiGXI,6MA7HX9E,MAAQ,CACJ+E,SAAU,GACVC,SAAU,GACVC,MAAO,GACPC,WAAW,EACXC,cAAe,GACfC,WAAW,EACXC,cAAe,GACfC,eAAe,EACfC,kBAAmB,MAWvBpC,aAAe,SAACC,GACZC,EAAKnC,SAALoC,OAAAC,EAAA,EAAAD,CAAA,GAEKF,EAAEI,OAAOvB,GAAKmB,EAAEI,OAAOC,WAKhCC,aAAe,SAACN,GACZA,EAAEO,iBACF,IAAIC,EAAQ,CACRmB,SAAU1B,EAAKrD,MAAM+E,SACrBC,SAAU3B,EAAKrD,MAAMgF,UAEzB3B,EAAKnC,SAAS,CACVgE,WAAW,EACXC,cAAe,GACfC,WAAW,EACXC,cAAe,GACfC,eAAe,EACfC,kBAAmB,KAGvB7E,IAAMmD,KAAK/D,EAAS,eAAgB8D,GAC/B9C,KAAK,SAAAC,GACFsC,EAAKnC,SAAS,CACV+D,MAAOlE,EAAKA,KAAKkE,QAErB/E,aAAasF,QAAQ,QAASnC,EAAKrD,MAAMiF,OACzC5B,EAAKhD,MAAMC,QAAQC,KAAK,eAG3BY,MAAM,SAAAC,GACH,IACQA,EAAM0C,SAAS/C,KAAKgE,UACpB1B,EAAKnC,SAAS,CACVgE,WAAW,EACXC,cAAe/D,EAAM0C,SAAS/C,KAAKgE,SAAS,KAGhD3D,EAAM0C,SAAS/C,KAAKiE,UACpB3B,EAAKnC,SAAS,CACVkE,WAAW,EACXC,cAAejE,EAAM0C,SAAS/C,KAAKiE,SAAS,KAGhD5D,EAAM0C,SAAS/C,KAAK0E,kBACpBpC,EAAKnC,SAAS,CACVoE,eAAe,EACfC,kBAAmBnE,EAAM0C,SAAS/C,KAAK0E,iBAAiB,KAIpE,MAAMrE,GACFJ,QAAQC,IAAIG,EAAM0C,iGA5DM,MAAjC5D,aAAaC,QAAQ,UACpBC,KAAKC,MAAMC,QAAQC,KAAK,8CAkE5B,OACIsB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACfL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIG,UAAU,6BAAd,iCACAL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,MAAIG,UAAU,wBAAd,SACAL,EAAAC,EAAAC,cAAA,QAAMgC,SAAU3D,KAAKsD,cACjB7B,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,uBACXL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,yBAAb,kBACAL,EAAAC,EAAAC,cAAA,SAAOE,GAAG,WAAW+B,KAAK,OAAOC,SAAU7D,KAAK+C,eAChDtB,EAAAC,EAAAC,cAAA,SAAOmC,QAAQ,YAAf,aACArC,EAAAC,EAAAC,cAAA,QAAMG,UAAU,uBAAuBD,GAAG,aACpC7B,KAAKJ,MAAMkF,UAAY9E,KAAKJ,MAAMmF,cAAgB,KAG5DtD,EAAAC,EAAAC,cAAA,OAAKG,UAAU,uBACXL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,yBAAb,QACAL,EAAAC,EAAAC,cAAA,SAAOE,GAAG,WAAW+B,KAAK,WAAWC,SAAU7D,KAAK+C,eACpDtB,EAAAC,EAAAC,cAAA,SAAOmC,QAAQ,YAAf,aACArC,EAAAC,EAAAC,cAAA,QAAMG,UAAU,uBAAuBD,GAAG,aACpC7B,KAAKJ,MAAMoF,UAAYhF,KAAKJ,MAAMqF,cAAgB,KAG5DxD,EAAAC,EAAAC,cAAA,KAAGG,UAAU,YAAa9B,KAAKJ,MAAMsF,cAAgBlF,KAAKJ,MAAMuF,kBAAoB,IACpF1D,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,uBACXL,EAAAC,EAAAC,cAAA,UAAQG,UAAU,6DAA6D8B,KAAK,UAApF,WAEJnC,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,UAAUJ,UAAU,IAA7B,iCAhHRU,aCsKL8C,6MA1KX1F,MAAQ,CACJ2F,WAAY,GACZC,UAAW,GACXC,MAAO,GACPd,SAAU,GACVC,SAAU,GACVc,OAAQ,GACRC,QAAQ,EACRC,WAAY,GACZC,QAAQ,EACRC,WAAY,GACZhB,WAAW,EACXC,cAAe,GACfgB,QAAQ,EACRC,WAAY,GACZhB,WAAW,EACXC,cAAe,MASnBlC,aAAe,SAACC,GACZC,EAAKnC,SAALoC,OAAAC,EAAA,EAAAD,CAAA,GACKF,EAAEI,OAAOvB,GAAKmB,EAAEI,OAAOC,WAIhCC,aAAe,SAACN,GACZA,EAAEO,iBACF,IAAIC,EAAQ,CACR+B,WAAYtC,EAAKrD,MAAM2F,WACvBC,UAAWvC,EAAKrD,MAAM4F,UACtBC,MAAOxC,EAAKrD,MAAM6F,MAClBd,SAAU1B,EAAKrD,MAAM+E,SACrBC,SAAU3B,EAAKrD,MAAMgF,SACrBc,OAAQ,IAEZzC,EAAKnC,SAAS,CACV6E,QAAQ,EACRC,WAAY,GACZC,QAAQ,EACRC,WAAY,GACZhB,WAAW,EACXC,cAAe,GACfgB,QAAQ,EACRC,WAAY,GACZhB,WAAW,EACXC,cAAe,KAEnB3E,IAAMmD,KAAK/D,EAAS,4BAA6B8D,GAC5C9C,KAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZsC,EAAKhD,MAAMC,QAAQC,KAAK,YAE3BY,MAAM,SAAAC,GACH,IACQA,EAAM0C,SAAS/C,KAAK4E,YACpBtC,EAAKnC,SAAS,CACV6E,QAAQ,EACRC,WAAY5E,EAAM0C,SAAS/C,KAAK4E,WAAW,KAG/CvE,EAAM0C,SAAS/C,KAAK6E,WACpBvC,EAAKnC,SAAS,CACV+E,QAAQ,EACRC,WAAY9E,EAAM0C,SAAS/C,KAAK6E,UAAU,KAG9CxE,EAAM0C,SAAS/C,KAAKgE,UACpB1B,EAAKnC,SAAS,CACVgE,WAAW,EACXC,cAAe/D,EAAM0C,SAAS/C,KAAKgE,SAAS,KAGhD3D,EAAM0C,SAAS/C,KAAK8E,OACpBxC,EAAKnC,SAAS,CACViF,QAAQ,EACRC,WAAYhF,EAAM0C,SAAS/C,KAAK8E,MAAM,KAG1CzE,EAAM0C,SAAS/C,KAAKiE,UACpB3B,EAAKnC,SAAS,CACVkE,WAAW,EACXC,cAAejE,EAAM0C,SAAS/C,KAAKiE,SAAS,KAIxD,MAAM5D,GACFJ,QAAQC,IAAIG,EAAM0C,iGAxEM,MAAjC5D,aAAaC,QAAQ,UACpBC,KAAKC,MAAMC,QAAQC,KAAK,8CA8E5B,OACIsB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACXL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,MAAIG,UAAU,oCAAd,WACAL,EAAAC,EAAAC,cAAA,QAAMgC,SAAU3D,KAAKsD,cACjB7B,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,sBACXL,EAAAC,EAAAC,cAAA,SAAOE,GAAG,aAAa+B,KAAK,OAAOC,SAAU7D,KAAK+C,eAClDtB,EAAAC,EAAAC,cAAA,SAAOmC,QAAQ,cAAf,eACArC,EAAAC,EAAAC,cAAA,QAAMG,UAAU,uBAAuBD,GAAG,UACpC7B,KAAKJ,MAAM+F,OAAS3F,KAAKJ,MAAMgG,WAAa,KAGtDnE,EAAAC,EAAAC,cAAA,OAAKG,UAAU,sBACXL,EAAAC,EAAAC,cAAA,SAAOE,GAAG,YAAY+B,KAAK,OAAOC,SAAU7D,KAAK+C,eACjDtB,EAAAC,EAAAC,cAAA,SAAOmC,QAAQ,aAAf,cACArC,EAAAC,EAAAC,cAAA,QAAMG,UAAU,uBAAuBD,GAAG,UACpC7B,KAAKJ,MAAMiG,OAAS7F,KAAKJ,MAAMkG,WAAa,KAGtDrE,EAAAC,EAAAC,cAAA,OAAKG,UAAU,sBACXL,EAAAC,EAAAC,cAAA,SACAF,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,SAAOE,GAAG,OAAOC,UAAU,WAAWmE,KAAK,SAASrC,KAAK,QAAQC,SAAU7D,KAAK+C,eAChFtB,EAAAC,EAAAC,cAAA,uBAIRF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,sBACXL,EAAAC,EAAAC,cAAA,SACAF,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,SAAOE,GAAG,SAASC,UAAU,WAAWmE,KAAK,SAASrC,KAAK,QAAQC,SAAU7D,KAAK+C,eAClFtB,EAAAC,EAAAC,cAAA,0BAKZF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,uBACXL,EAAAC,EAAAC,cAAA,SAAOE,GAAG,WAAW+B,KAAK,OAAOC,SAAU7D,KAAK+C,eAChDtB,EAAAC,EAAAC,cAAA,SAAOmC,QAAQ,YAAf,aACArC,EAAAC,EAAAC,cAAA,QAAMG,UAAU,uBAAuBD,GAAG,aACpC7B,KAAKJ,MAAMkF,UAAY9E,KAAKJ,MAAMmF,cAAgB,KAG5DtD,EAAAC,EAAAC,cAAA,OAAKG,UAAU,uBACXL,EAAAC,EAAAC,cAAA,SAAOE,GAAG,QAAQ+B,KAAK,QAAQC,SAAU7D,KAAK+C,eAC9CtB,EAAAC,EAAAC,cAAA,SAAOmC,QAAQ,SAAf,UACArC,EAAAC,EAAAC,cAAA,QAAMG,UAAU,uBAAuBD,GAAG,UACpC7B,KAAKJ,MAAMmG,OAAS/F,KAAKJ,MAAMoG,WAAa,KAGtDvE,EAAAC,EAAAC,cAAA,OAAKG,UAAU,uBACXL,EAAAC,EAAAC,cAAA,SAAOE,GAAG,WAAW+B,KAAK,WAAWC,SAAU7D,KAAK+C,eACpDtB,EAAAC,EAAAC,cAAA,SAAOmC,QAAQ,YAAf,aACArC,EAAAC,EAAAC,cAAA,QAAMG,UAAU,uBAAuBD,GAAG,aACpC7B,KAAKJ,MAAMoF,UAAYhF,KAAKJ,MAAMqF,cAAgB,KAG5DxD,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,uBACXL,EAAAC,EAAAC,cAAA,UAAQG,UAAU,wDAAwD8B,KAAK,UAA/E,sBAjKXpB,aC4EN0D,6MA1EXtG,MAAQ,CACJuG,MAAO,uFAIPnG,KAAKoG,cACLpG,KAAKqG,iDAGK,IAAAhG,EAAAL,KACNwD,EAAQ,CACRqB,MAAO/E,aAAaC,QAAQ,UAEI,MAAjCD,aAAaC,QAAQ,SACpBC,KAAKC,MAAMC,QAAQC,KAAK,UACe,MAAjCL,aAAaC,QAAQ,UAC3BO,IAAMmD,KAAK/D,EAAS,oBAAqB8D,GACxC9C,KAAK,SAAAC,GACFC,QAAQC,IAAI,eAAgBF,KAE/BI,MAAM,SAAAC,GACHJ,QAAQC,IAAI,qBAAsBG,GAClClB,aAAa0E,QACbnE,EAAKJ,MAAMC,QAAQC,KAAK,+CAKzB,IAAAe,EAAAlB,KACPM,IAAMC,IAAI,0BAA2B,CAAEC,QAAS,CAAE8F,OAAU,sBACvD5F,KAAK,SAAAC,GACFC,QAAQC,IAAIF,EAAKA,MACjBO,EAAKJ,SAAS,CACVqF,MAAOxF,EAAKA,KAAK4F,SAASC,OAAO,OAGxCzF,MAAM,SAAAC,GACHJ,QAAQC,IAAIG,sCAMpB,IAAMmF,EAAQnG,KAAKJ,MAAMuG,MACrB1E,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,2BACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,2BACXL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,cAAe9B,KAAKJ,MAAMuG,MAAMhE,OAC9CV,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGG,UAAU,mBAAoB9B,KAAKJ,MAAMuG,MAAMA,OAClD1E,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,MAAIG,UAAU,eAAd,KAAgC9B,KAAKJ,MAAMuG,MAAMM,YAMjEhF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,0BAAf,oBAEJ,OACIL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WACXL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,MAAIG,UAAU,wBAAd,sBAGNqE,UArEE3D,aC8BLkE,MArBf,WACI,OACIjF,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACIR,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACXL,EAAAC,EAAAC,cAACgF,EAAD,MACAlF,EAAAC,EAAAC,cAACiF,EAAA,EAAD,SACInF,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWrC,IACjCjD,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAWrC,IAChCjD,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAWzB,IACjC7D,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAWb,IAChCzE,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAOE,KAAK,YAAYC,UAAWpH,IACnC8B,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAOE,KAAK,eAAeC,UAAWtE,IACtChB,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAOE,KAAK,cAAcC,UAAW5C,IACrC1C,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAOE,KAAK,mBAAmBC,UAAWhD,IAC1CtC,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAOE,KAAK,KAAKC,UAAWrC,IAThC,QCRIsC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASnD,MACvB,2DCZN1D,IAAM8G,aAAa1D,SAAS2D,IAAI,SAAA3D,GAC5B,OAAOA,GAET,SAAA1C,GACE,IACuC,2BAA/BA,EAAM0C,SAAS/C,KAAK2G,QAAsE,8BAA/BtG,EAAM0C,SAAS/C,KAAK2G,QAChD,gFAA/BtG,EAAM0C,SAAS/C,KAAK2G,QACgB,8BAApCtG,EAAM0C,SAAS2B,mBACfvF,aAAa0E,QACbyC,OAAOC,SAASK,UAGxB,MAAMvG,GACFJ,QAAQC,IAAIG,GAEhB,OAAOwG,QAAQC,OAAOzG,KAI1B0G,IAASC,OAAOlG,EAAAC,EAAAC,cAACiG,EAAD,MAASC,SAASC,eAAe,SDwG3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvH,KAAK,SAAAwH,GACjCA,EAAaC","file":"static/js/main.20892a4b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/memory.82a807f5.jpeg\";","//export const server = 'http://localhost:8000';\nexport const server = 'https://memoryjournalapp.herokuapp.com';\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nimport { server } from '../global';\nimport Plane from '../assets/images/memory.jpeg';\n\n\nclass Memories extends Component {\n    state = {\n        memories: []\n    };\n\n    componentDidMount() {\n        if(localStorage.getItem('token') == null) {\n            this.props.history.push('/login');\n        }\n        this.getMemories();\n    }\n\n    getMemories () {\n        axios.get(server + '/core/api/memories', { headers: { \"Authorization\": \"JWT \" + localStorage.getItem('token') }})\n            .then(data => {\n                console.log(data);\n                this.setState({\n                    memories: data.data\n                });\n            })\n            .catch(error => {\n                console.log(error);\n            }\n        )\n    }\n\n    deleteMemory(memory_id) {\n        // confirm('Are you sure you want to delete this memory?');\n        axios.delete(server + '/core/api/memory/' + memory_id, { headers: { \"Authorization\": \"JWT \" + localStorage.getItem('token') }})\n            .then(data => {\n                console.log(data);\n                this.getMemories();\n            })\n            .catch(error => {\n                console.log(error);\n            }\n        )\n    }\n\n    render() {\n        const { memories } = this.state;\n\n        const memoriesList = memories.length ? (\n            memories.map(memory => {\n                return (\n                    <div key={ memory.id } className=\"card horizontal\">\n                        <div className=\"card-image\">\n                            <img className=\"memory-image\" src={ Plane } />\n                        </div>\n                        <div className=\"card-stacked\">\n                            <div className=\"card-content\">\n                                <Link to={ '/memory/' + memory.id }>\n                                    <span className=\"card-title\">{ memory.title }</span>\n                                </Link>\n                                {\n                                    memory.description.length > 100 ? (\n                                        <p>{ memory.description.substring(0,90) + '...' }</p>\n                                    ) : (\n                                        <p>{ memory.description }</p>\n                                    )\n                                }\n                            </div>\n                            <div className=\"card-action\">\n                                <i className=\"red-text material-icons right cursor\" onClick={() => {this.deleteMemory(memory.id)}} title=\"delete memory\">delete</i>\n                                <Link to={ '/edit-memory/' + memory.id }>\n                                    <i className=\"material-icons right\" title=\"edit memory\">edit</i>\n                                </Link>\n                            </div>\n                        </div>\n                    </div>\n                )\n            })\n        ) : (\n            <p className='center'></p>\n        );\n        return (\n            <div className='container home'>\n                <div className=\"row\">\n                    <div className=\"col s6 push-s6\">\n                        <h1>\n                            <Link to={ '/save-memory/' }>\n                                <a id=\"scale-demo\" className=\"btn-floating btn-small pull-right\" title=\"add new memory\">\n                                    <i className=\"material-icons\">add</i>\n                                </a>\n                            </Link>\n                        </h1>\n                    </div>\n                    <div className=\"col s6 pull-s6\">\n                        <h3 className='cyan-text accent-4s'>My Memories</h3>\n                    </div>\n                </div>\n                { memoriesList }\n            </div>\n        );\n    }\n}\n\nexport default Memories;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport { server } from '../global';\n\nclass SaveMemory extends Component {\n    state = {\n        title: '',\n        description: '',\n        image: '',\n        vtitle: false,\n        vtitletext: '',\n        vdescription: false,\n        vdescriptiontext: ''\n    };\n    \n    componentDidMount() {\n        if(localStorage.getItem('token') == null) {\n            this.props.history.push('/login');\n        }\n    }\n    \n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        });\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        let model = {\n            title: this.state.title,\n            description: this.state.description,\n            image: this.state.image\n        };\n        this.setState({\n            vtitle: false,\n            vtitletext: '',\n            vdescription: false,\n            vdescriptiontext: '',\n        });\n        axios.post(server + '/core/api/memories', model, { headers: { \"Authorization\": \"JWT \" + localStorage.getItem('token') }})\n            .then(data => {\n                console.log(data);\n                this.props.history.push('/memories');\n            })\n            .catch(error => {\n                try {\n                    if (error.response.data.title) {\n                        this.setState({\n                            vtitle: true,\n                            vtitletext: error.response.data.title[0]\n                        });\n                    }\n                    if (error.response.data.description) {\n                        this.setState({\n                            vdescription: true,\n                            vdescriptiontext: error.response.data.description[0]\n                        });\n                    }\n                }\n                catch(error) {\n                    console.log(error.response);\n                }\n            }\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <br />\n                <br />\n                <h3>Save Your Memory</h3>\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"row\">\n                        <div className=\"input-field col s12\">\n                            <input id=\"title\" type=\"text\" onChange={this.handleChange} />\n                            <label htmlFor=\"title\">Memory Title:</label>\n                            <span className=\"red-text helper-text\" id=\"vtitle\">\n                                { this.state.vtitle ? this.state.vtitletext : '' }\n                            </span>\n                        </div>\n                        <div className=\"input-field col s12\">\n                            <textarea id=\"description\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n                            <label htmlFor=\"description\">Memory Description:</label>\n                            <span className=\"red-text helper-text\" id=\"vdescription\">\n                                { this.state.vdescription ? this.state.vdescriptiontext : '' }\n                            </span>\n                        </div>\n                        <input type=\"file\" />\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"input-field col s12\">\n                            <button className=\"waves-effect waves-light btn white-text blue darken-4 pull\" type=\"submit\">Submit</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default SaveMemory;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport { server } from '../global';\n\nclass EditMemory extends Component {\n    state = {\n        title: '',\n        description: '',\n        image: '',\n        vtitle: false,\n        vtitletext: '',\n        vdescription: false,\n        vdescriptiontext: ''\n    };\n\n    componentDidMount() {\n        if(localStorage.getItem('token') == null) {\n            this.props.history.push('/login');\n        }\n        let memory_id = this.props.match.params.id;\n        axios.get(server + '/core/api/memory/' + memory_id, { headers: { 'Authorization': 'JWT ' + localStorage.getItem('token') }})\n            .then(data => {\n                this.setState({\n                    title: data.data.title,\n                    description: data.data.description,\n                    image: data.data.image\n                });\n            })\n            .catch(error => {\n                console.log(error);\n            }\n        )\n    }\n    \n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        });\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        let model = {\n            title: this.state.title,\n            description: this.state.description,\n            image: this.state.image\n        };\n        this.setState({\n            vtitle: false,\n            vtitletext: '',\n            vdescription: false,\n            vdescriptiontext: '',\n        });\n        let memory_id = this.props.match.params.id;\n        axios.put(server + '/core/api/memory/' + memory_id, model, { headers: { 'Authorization': 'JWT ' + localStorage.getItem('token') }})\n            .then(data => {\n                this.setState({\n                    title: data.data.title,\n                    description: data.data.description,\n                    image: data.data.image\n                });\n                this.props.history.push('/memories');\n            })\n            .catch(error => {\n                try {\n                    if (error.response.data.title) {\n                        this.setState({\n                            vtitle: true,\n                            vtitletext: error.response.data.title[0]\n                        });\n                    }\n                    if (error.response.data.description) {\n                        this.setState({\n                            vdescription: true,\n                            vdescriptiontext: error.response.data.description[0]\n                        });\n                    }\n                }\n                catch(error) {\n                    console.log(error.response);\n                }\n            }\n        )\n    };\n\n    render() {\n        return (\n            <div className=\"container\">\n                <br />\n                <br />\n                <h3>Edit Your Memory</h3>\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"row\">\n                        <div className=\"input-field col s12\">\n                            <span>Memory Title:</span>\n                            <input id=\"title\" type=\"text\" onChange={this.handleChange} value={this.state.title} />\n                            <span className=\"red-text helper-text\" id=\"vtitle\">\n                                { this.state.vtitle ? this.state.vtitletext : '' }\n                            </span>\n                        </div>\n                        <div className=\"input-field col s12\">\n                            <span>Memory Description:</span>\n                            <textarea id=\"description\" className=\"materialize-textarea\" onChange={this.handleChange} value={this.state.description}></textarea>\n                            <span className=\"red-text helper-text\" id=\"vdescription\">\n                                { this.state.vdescription ? this.state.vdescriptiontext : '' }\n                            </span>\n                        </div>\n                        <input type=\"file\" />\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"input-field col s12\">\n                            <button className=\"waves-effect waves-light btn white-text blue darken-4 pull\" type=\"submit\">Submit</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default EditMemory;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nimport { server } from '../global';\nimport Plane from '../assets/images/memory.jpeg';\n\nclass Memory extends Component {\n    state = {\n        memory: {}\n    };\n\n    componentDidMount() {\n        if(localStorage.getItem('token') == null) {\n            this.props.history.push('/login');\n        }\n        let memory_id = this.props.match.params.id;\n        axios.get(server + '/core/api/memory/' + memory_id, { headers: { \"Authorization\": \"JWT \" + localStorage.getItem('token') }})\n            .then(data => {\n                console.log(data);\n                this.setState({\n                    memory: data.data\n                });\n            })\n            .catch(error => {\n                console.log(error);\n            }\n        )\n    }\n\n    handleClick = (e) => {\n        this.props.deletePost(this.props.post.id);\n        this.props.history.push('/');\n    };\n\n    deleteMemory(memory_id) {\n        axios.delete(server + '/core/api/memory/' + memory_id, { headers: { \"Authorization\": \"JWT \" + localStorage.getItem('token') }})\n            .then(data => {\n                console.log(data);\n                this.props.history.push('/memories');\n            })\n            .catch(error => {\n                console.log(error);\n            }\n        )\n    }\n\n    render() {\n        const memory = this.state.memory ? (\n            <div className=\"row\">\n                <div className=\"col s12\">\n                    <div className=\"card\">\n                        <div className=\"card-image\">\n                            <img className=\"single-memory-image\" src={ Plane } />\n                                <Link to={ '/save-memory/' }>\n                                    <a className=\"btn-floating halfway-fab waves-effect waves-light blue\" title=\"add new memory\">\n                                        <i className=\"material-icons\">add</i>\n                                    </a>\n                                </Link>\n                        </div>\n                        <div className=\"card-content\">\n                            <span className=\"card-title\">{ this.state.memory.title }</span>\n                            <p>{ this.state.memory.description }</p>\n                        </div>\n                        <div className=\"card-action\">\n                            <i className=\"red-text material-icons right cursor\" onClick={() => {this.deleteMemory(this.state.memory.id)}} title=\"delete memory\">delete</i>\n                            <Link to={ '/edit-memory/' + this.state.memory.id }>\n                                <i className=\"material-icons right\" title=\"edit memory\">edit</i>\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            ) : (\n            <div className='center mt-5'></div>\n        );\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col s12\">\n                        <h3 className='cyan-text accent-4s'>My Memory</h3>\n                    </div>\n                </div>\n                { memory }\n            </div>\n        );\n    }\n}\n\nexport default Memory;\n","import React, { Component } from 'react';\nimport { Link, NavLink, withRouter } from 'react-router-dom';\nimport axios from 'axios';\n\nimport { server } from '../global';\n\n\nclass Navbar extends Component {\n\n    logout = () => {\n        localStorage.clear();\n        this.props.history.push('/login');\n    }\n\n    render() {\n        return (\n            <nav className=\"nav-wrapper indigo\">\n                <div className=\"container\">\n                    <Link to=\"/\" className=\"brand-logo fontWeight\">Memory Journal</Link>\n                    {\n                        localStorage.getItem('token') != null ? (\n                        <ul id=\"nav-mobile\" className=\"right hide-on-small-and-down\">\n                            <li><Link to=\"/memories\">My Memories</Link></li>\n                            <li><Link to=\"/quote\">Quote</Link></li>\n                            <li>\n                                <NavLink to=\"/login\">\n                                    <i className=\"material-icons\" onClick={this.logout}>power_settings_new</i>\n                                </NavLink>\n                            </li>\n                        </ul> ) : (\n                            null\n                        )\n                    }\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default withRouter(Navbar);","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\n// import Spinner from '../spinner-service/spinner-service';\nimport { server } from '../global';\n// import Position from '../toast-service/toast-service';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\n\nclass Login extends Component {\n    state = {\n        username: '',\n        password: '',\n        token: '',\n        vusername: false,\n        vusernametext: '',\n        vpassword: false,\n        vpasswordtext: '',\n        vauthenticate: false,\n        vauthenticatetext: ''\n    };\n\n    //if item is retrieved add to history\n    componentDidMount() {\n        if(localStorage.getItem('token') != null) {\n            this.props.history.push('/memories');\n        }\n    }\n\n    //function to handle change\n    handleChange = (e) => {\n        this.setState({\n            //match value and input\n            [e.target.id]: e.target.value\n        });\n    }\n\n    //function to handle submit\n    handleSubmit = (e) => {\n        e.preventDefault();\n        let model = {\n            username: this.state.username,\n            password: this.state.password\n        };\n        this.setState({\n            vusername: false,\n            vusernametext: '',\n            vpassword: false,\n            vpasswordtext: '',\n            vauthenticate: false,\n            vauthenticatetext: ''\n        });\n        //post request using axios\n        axios.post(server + '/token-auth/', model)\n            .then(data => {\n                this.setState({\n                    token: data.data.token\n                });\n                localStorage.setItem('token', this.state.token);\n                this.props.history.push('/memories');\n            })\n            //catch errors\n            .catch(error => {\n                try {\n                    if (error.response.data.username) {\n                        this.setState({\n                            vusername: true,\n                            vusernametext: error.response.data.username[0]\n                        });\n                    }\n                    if (error.response.data.password) {\n                        this.setState({\n                            vpassword: true,\n                            vpasswordtext: error.response.data.password[0]\n                        });\n                    }\n                    if (error.response.data.non_field_errors) {\n                        this.setState({\n                            vauthenticate: true,\n                            vauthenticatetext: error.response.data.non_field_errors[0]\n                        });\n                    }\n                }\n                catch(error) {\n                    console.log(error.response);\n                }\n            }\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n            <br />\n                <h3 className=\"grey-text darken-4 center\">Welcome to the Memory Journal</h3>\n                <hr />\n                <br />\n                <h4 className=\"indigo-text darken-4\">Login</h4>\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"row\">\n                        <div className=\"input-field col s12\">\n                            <i className=\"material-icons prefix\">account_circle</i>\n                            <input id=\"username\" type=\"text\" onChange={this.handleChange} />\n                            <label htmlFor=\"username\">Username:</label>\n                            <span className=\"red-text helper-text\" id=\"vusername\">\n                                { this.state.vusername ? this.state.vusernametext : '' }\n                            </span>\n                        </div>\n                        <div className=\"input-field col s12\">\n                            <i className=\"material-icons prefix\">lock</i>\n                            <input id=\"password\" type=\"password\" onChange={this.handleChange} />\n                            <label htmlFor=\"password\">Password:</label>\n                            <span className=\"red-text helper-text\" id=\"vpassword\">\n                                { this.state.vpassword ? this.state.vpasswordtext : '' }\n                            </span>\n                        </div>\n                        <p className=\"red-text\">{ this.state.vauthenticate ? this.state.vauthenticatetext : '' }</p>\n                        <div className=\"row\">\n                            <div className=\"input-field col s12\">\n                                <button className=\"waves-effect waves-light btn white-text blue darken-4 pull\" type=\"submit\">Submit</button>\n                            </div>\n                            <Link to=\"/signup\" className=\"\">create new account</Link>\n                            {/* <a href=\"/signup\"> */}\n                                {/* <span className=\"text-small mt-0\"></span> */}\n                            {/* </a> */}\n                        </div>\n                    </div>\n                </form>\n                {/* <Position />  */}\n                {/* <Spinner /> */}\n            </div>\n        );\n    }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport { server } from '../global';\n\nclass Signup extends Component {\n    state = {\n        first_name: '',\n        last_name: '',\n        email: '',\n        username: '',\n        password: '',\n        gender: '',\n        vfname: false,\n        vfnametext: '',\n        vlname: false,\n        vlnametext: '',\n        vusername: false,\n        vusernametext: '',\n        vemail: false,\n        vemailtext: '',\n        vpassword: false,\n        vpasswordtext: ''\n    };\n\n    componentDidMount() {\n        if(localStorage.getItem('token') != null) {\n            this.props.history.push('/memories');\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        let model = {\n            first_name: this.state.first_name,\n            last_name: this.state.last_name,\n            email: this.state.email,\n            username: this.state.username,\n            password: this.state.password,\n            gender: ''\n        };\n        this.setState({\n            vfname: false,\n            vfnametext: '',\n            vlname: false,\n            vlnametext: '',\n            vusername: false,\n            vusernametext: '',\n            vemail: false,\n            vemailtext: '',\n            vpassword: false,\n            vpasswordtext: ''\n        });\n        axios.post(server + '/accounts/api/user/create', model)\n            .then(data => {\n                console.log(data);  \n                this.props.history.push('/login');\n            })\n            .catch(error => {\n                try {\n                    if (error.response.data.first_name) {\n                        this.setState({\n                            vfname: true,\n                            vfnametext: error.response.data.first_name[0]\n                        });\n                    }\n                    if (error.response.data.last_name) {\n                        this.setState({\n                            vlname: true,\n                            vlnametext: error.response.data.last_name[0]\n                        });\n                    }\n                    if (error.response.data.username) {\n                        this.setState({\n                            vusername: true,\n                            vusernametext: error.response.data.username[0]\n                        });\n                    }\n                    if (error.response.data.email) {\n                        this.setState({\n                            vemail: true,\n                            vemailtext: error.response.data.email[0]\n                        });\n                    }\n                    if (error.response.data.password) {\n                        this.setState({\n                            vpassword: true,\n                            vpasswordtext: error.response.data.password[0]\n                        });\n                    }\n                }\n                catch(error) {\n                    console.log(error.response);\n                }\n            }\n        )\n    }\n\n    render() {\n        return (\n            <div className='container'>\n                <br />\n                <h3 className='indigo-text darken-4 center-text'>Sign Up</h3>\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"row\">\n                        <div className=\"input-field col s4\">\n                            <input id=\"first_name\" type=\"text\" onChange={this.handleChange} />\n                            <label htmlFor=\"first_name\">First Name:</label>\n                            <span className=\"red-text helper-text\" id=\"vfname\">\n                                { this.state.vfname ? this.state.vfnametext : '' }\n                            </span>\n                        </div>\n                        <div className=\"input-field col s4\">\n                            <input id=\"last_name\" type=\"text\" onChange={this.handleChange} />\n                            <label htmlFor=\"last_name\">Last Name:</label>\n                            <span className=\"red-text helper-text\" id=\"vfname\">\n                                { this.state.vlname ? this.state.vlnametext : '' }\n                            </span>\n                        </div>\n                        <div className=\"input-field col s2\">\n                            <p>\n                            <label>\n                                <input id=\"male\" className=\"with-gap\" name=\"group1\" type=\"radio\" onChange={this.handleChange} />\n                                <span>Male</span>\n                            </label>\n                            </p>\n                        </div>\n                        <div className=\"input-field col s2\">\n                            <p>\n                            <label>\n                                <input id=\"female\" className=\"with-gap\" name=\"group1\" type=\"radio\" onChange={this.handleChange} />\n                                <span>Female</span>\n                            </label>\n                            </p>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"input-field col s12\">\n                            <input id='username' type=\"text\" onChange={this.handleChange} />\n                            <label htmlFor=\"username\">Username:</label>\n                            <span className=\"red-text helper-text\" id=\"vusername\">\n                                { this.state.vusername ? this.state.vusernametext : '' }\n                            </span>\n                        </div>\n                        <div className=\"input-field col s12\">\n                            <input id='email' type=\"email\" onChange={this.handleChange} />\n                            <label htmlFor=\"email\">Email:</label>\n                            <span className=\"red-text helper-text\" id=\"vemail\">\n                                { this.state.vemail ? this.state.vemailtext : '' }\n                            </span>\n                        </div>\n                        <div className=\"input-field col s12\">\n                            <input id='password' type=\"password\" onChange={this.handleChange} />\n                            <label htmlFor=\"password\">Password:</label>\n                            <span className=\"red-text helper-text\" id=\"vpassword\">\n                                { this.state.vpassword ? this.state.vpasswordtext : '' }\n                            </span>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col s12\">\n                                <button className='waves-effect waves-light btn white-text blue darken-4' type=\"submit\">Submit</button>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Signup;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport { server } from '../global';\n\n\nclass Quote extends Component {\n    state = {\n        quote: {}\n    };\n    \n    componentDidMount() {\n        this.verifyToken();\n        this.getQuote();\n    }\n\n    verifyToken() {\n        let model = {\n            token: localStorage.getItem('token')\n        };\n        if(localStorage.getItem('token') == null) {\n            this.props.history.push('/login');\n        } else if(localStorage.getItem('token') != null) {\n            axios.post(server + '/auth-jwt-verify/', model)\n            .then(data => {\n                console.log('token verify', data);\n            })\n            .catch(error => {\n                console.log('token verify error', error);\n                localStorage.clear();\n                this.props.history.push('/login');\n            });\n        }\n    }\n\n    getQuote() {\n        axios.get('https://quotes.rest/qod', { headers: { \"Accept\": \"application/json\" }})\n            .then(data => {\n                console.log(data.data);\n                this.setState({\n                    quote: data.data.contents.quotes[0]\n                });\n            })\n            .catch(error => {\n                console.log(error);\n            }\n        )\n    }\n\n    render() {\n        const quote = this.state.quote ? (\n            <div className=\"row\">\n                <div className=\"col s12\">\n                    <div className=\"card blue-grey darken-1\">\n                        <div className=\"card-content white-text\">\n                            <h4 className=\"card-title\">{ this.state.quote.title }</h4>\n                            <hr />\n                            <p className=\"flow-text quote\">{ this.state.quote.quote }</p>\n                            <br />\n                            <h5 className=\"yellow-text\">- { this.state.quote.author }</h5>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            ) : (\n            <div className='center mt-5 white-text'>Loading quote...</div>\n        );\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col s12\">\n                        <br />\n                        <h3 className='black-text accent-4s'>Quote of the Day</h3>\n                    </div>\n                </div>\n                { quote }\n            </div>\n        );\n    }\n}\n\nexport default Quote;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport './styles.css';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nimport Memories from './components/memories';\nimport SaveMemory from './components/save-memory';\nimport EditMemory from './components/edit-memory';\nimport Memory from './components/memory';\nimport Navbar from './components/navbar';\nimport Login from './components/login';\nimport Signup from './components/signup';\nimport Quote from './components/quote';\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <div className=\"App\">\n                <Navbar />\n                <Switch> {/* allows Only One Route to be displayed  */}\n                    <Route exact path='/' component={Login} />\n                    <Route path='/login' component={Login} />\n                    <Route path='/signup' component={Signup} />\n                    <Route path='/quote' component={Quote} />\n                    <Route path='/memories' component={Memories} />\n                    <Route path='/save-memory' component={SaveMemory} />\n                    <Route path='/memory/:id' component={Memory} />\n                    <Route path='/edit-memory/:id' component={EditMemory} />\n                    <Route path='/*' component={Login} /> {/* handles unknown urls */}\n                </Switch>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport axios from \"axios\";\n\naxios.interceptors.response.use(response => {\n    return response;\n  },\n  error => {\n    try {\n        if (error.response.data.detail === 'Signature has expired.' || error.response.data.detail === 'Error decoding signature.' ||\n            error.response.data.detail === 'Invalid Authorization header. Credentials string should not contain spaces.' || \n            error.response.non_field_errors === 'Error decoding signature.') {\n            localStorage.clear();\n            window.location.reload();\n        }\n    }\n    catch(error) {\n        console.log(error);\n    }\n    return Promise.reject(error);\n  }\n);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}